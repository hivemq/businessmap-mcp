name: Release

on:
  push:
    branches: [main]

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag.outputs.new_version }}
      tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: $(cat VERSION | tr -d '\n')
          tag_prefix: v

  build:
    needs: create-tag
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        os: [linux, darwin]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: DeterminateSystems/determinate-nix-action@v3

      - uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          use-flakehub: false

      - name: Build for ${{ matrix.arch }}-${{ matrix.os }}
        run: |
          nix build .#businessmap-mcp --system ${{ matrix.arch }}-${{ matrix.os }}
          cp result/bin/businessmap-mcp businessmap-mcp-${{ matrix.arch }}-${{ matrix.os }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: businessmap-mcp-${{ matrix.arch }}-${{ matrix.os }}
          path: businessmap-mcp-${{ matrix.arch }}-${{ matrix.os }}
          retention-days: 1

  source:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create source archive
        run: |
          git archive --format=tar.gz --prefix=businessmap-mcp.src > businessmap-mcp.src.tar.gz

      - name: Upload source artifact
        uses: actions/upload-artifact@v4
        with:
          name: businessmap-mcp-source
          path: businessmap-mcp.src.tar.gz

  release:
    needs: [create-tag, build, source]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.create-tag.outputs.tag }}
          name: Release ${{ needs.create-tag.outputs.version }}
          draft: false
          prerelease: false
          artifacts: |
            artifacts/businessmap-mcp-x86_64-linux/businessmap-mcp-x86_64-linux
            artifacts/businessmap-mcp-aarch64-linux/businessmap-mcp-aarch64-linux
            artifacts/businessmap-mcp-x86_64-darwin/businessmap-mcp-x86_64-darwin
            artifacts/businessmap-mcp-aarch64-darwin/businessmap-mcp-aarch64-darwin
            artifacts/businessmap-mcp-source/businessmap-mcp.src.tar.gz
          body: |
            ## Release ${{ needs.create-tag.outputs.version }}

            ### Downloads
            - **Linux x86_64**: `businessmap-mcp-x86_64-linux`
            - **Linux ARM64**: `businessmap-mcp-aarch64-linux`
            - **macOS Intel**: `businessmap-mcp-x86_64-darwin`
            - **macOS Apple Silicon**: `businessmap-mcp-aarch64-darwin`
            - **Source Code**: `businessmap-mcp.src.tar.gz`

            ### Installation
            ```bash
            # Download binary for your platform
            # Make executable and move to PATH
            chmod +x businessmap-mcp-<your-platform>
            sudo mv businessmap-mcp-<your-platform> /usr/local/bin/businessmap-mcp

            # Verify installation
            businessmap-mcp -version
            ```

            Built with Nix flake for reproducible cross-platform binaries.
